day03(Java 1일차)
git 실습  -> git 명령어 -> java란 -> java 설치(jdk17, 이클립스)

1. git 명령어
	git clone url 주소 폴더 경로 : log 기록까지 모두 가져와야 할 때
	git init : 깃 관리 대상 폴더를 만들 때 
	git add . or 파일명 : 파일을 스테이징 영역에 올릴때
	git rm --cached 파일명 : 스테이징 영역에 올라간 파일을 내릴때
	git commit -m "메시지" : 버전 확정 후 로컬에 올릴때
	git branch : 현재 브랜치 목록
	git branch -m 기존브랜치명 변경이름 : 이름변경
	git branch 브랜치명 : 브랜치생성
	git branch -D 브랜치명 : 브랜치 삭제
	git remote -v : 현재 연결확인
	git remote add 원격저장소이름 주소 : 저장소 추가
	git remote set-url 원격주소이름 주소 : 저장소 변경
	git remote remove 원격주소이름 : 
	git remote rename 기존주소이름 원격주소이름 
	git switch 브랜치이름 : 
	git merge 병합할 브런치명 : 
	git log
	git checkout 체크섬 or -
	git push 원격주소이름 브랜치명
	git pull 원격주소이름 브랜치명
	git pull 원격주소이름 브랜치명 --allow-unrelated-histories
	
	리눅스 언어
	echo "내용" > 파일명.txt
	ls -al : 현재 폴더의 파일 목록
	
==================================================================================================

2. JAVA
1) 컴퓨터 : 
	하드웨어 : 손으로 만질 수 있는 것 ex) 모니터, 마우스, 메인보드, 파워 등등
	소프트웨어 : 손으로 만질 수 없는 것, 하드웨어가 있어야 사용할 수 있다. ex) 인터넷, 게임, 카카오톡 등등
	
	컴퓨터 = 하드웨어 + 소프트웨어

2) 컴퓨터 언어
	저급언어 : 컴퓨터가 이해하기 쉬운 언어
		 기계어, 어셈블리어
		 배우기 어렵고 유지보수가 힘들다.
		 실행속도가 빠르다.

	고급언어 : 사람이 이해하기 쉬운 언어
		 Java python c++
		 일상 언어에서 사용하는 표현을 그대로 가져다 쓸 수 있음
		 이식성이 높음(운영체제에 따른 영향을 받지 않는다.)
		 
	
3) 번역 프로그램
	저급언어 ----- 번역프로그램 ----- 고급 언어
			컴파일러(통번역) : JAVA 
			인터프리터(동시번역) : JAVA script, Python, ...

4) JAVA : 프로그래밍 언어

프로그래밍 언어 : 개발자와 컴퓨터가 소통하기 위한 언어

소스코드 : 컴퓨터와 개발자가 소통할 수 있는 언어로 작성해 둔 것
	 사람이 이해하기 위한 코드

컴파일러 : 컴파일 작업을 해주는 번역기

컴파일 : 사람의 언어를 컴퓨터의 언어로 번역해주는 작업


5) 프로그램 동작원리
		<일반 프로그램>		<JAVA 프로그램>
		프로그램			프로그램
					JVM(Java Virtual Machine)
	---	운영체제(OS)	---	운영체제(OS)	---
		하드웨어			하드웨어

	일반프로그램이 실행 -> 프로그램을 구성하는 명령어와 데이터가 운영체제에 의해 메모리(Ram)에 적재
	-> 프로그램이 메모리에 적재되어 실행되는 상태( 프로세스 ) -> CPU 가 메모리에 있는 exe 파일 해석 및 실행

- JVM(Java Virtual Machine) : 
	운영체제 맞춰서 java로 만든 프로그램을 실행시켜준다. 컴파일러가지고 있음
	javac : .java파일(사람의 언어로 된 파일) 컴파일
	java : .class 파일(컴퓨터 언어로 된 파일) 실행
	
	작성한 소스코드 
	->.java 파일로 만들어짐 
	-> 자바 컴파일러가 .class 파일로 변환(java bytecode)
	-> JVM OS(운영체제)가 bytecode 를 이해할 수 있도록 도와줌

	자바 컴파일러는 jdk를 설치하면 bin 폴더에 존재하는 javac.exe 파일을 의미한다.

- JRE(Java Runtime Enviroment)
	JVM 실행한다.
	JVM을 실행할 때 필요한 라이브러리 파일 등을 가지고 있다.

- JDK(Java Development Kit)
	JRE을 포함한다.
	JRE 외에 개발에 필요한 도구들을 가지고 있다.


3. JDK 설치
설치 삭제시 cmd 창 닫아둘 것

1) 설치 확인
	Window + r > cmd -> 명령 프롬폼트 연결 
	java -version 
	javac -version
	이미 있거나 과거 버전이라면 삭제 권장

2) JDK 설치
	구글 검색창에 JDK17 검색
	제일 상단의 오라클 홈페이지 접속
	windows x64 Installer exe 파일 다운로드
	mac m1 칩 arm64 DMG Installer 파일 다운로드 -> 맥일경우
	설치 프로그램 실행 > 설치 경로 중에 Program Files 경로 제거(C:\java\)
	설치 완료 후 cmd > java -version, javac -version

3) IDE(통합 개발 환경)
- 이클립스 설치(intellij : 유료)
- 압축파일로 설치하는 이유 : 내폴더에 넣어두고 나만 쓰려고
	
	1. https://www.eclipse.org/downloads/packages/release 링크 접속
	2. 원하는 버전 클릭(2024.12) 
	3. Eclipse IDE for Enterprise Java And wep developers(톱니바퀴모양 아이콘)
	4. Window x86_64 다운로드 > 압축 풀때는 반디집으로 압축 풀 것

- 이클립스 설정(Window > Preference)
	1. 글씨체 변경
		font 검색 > Colors and Fonts > basic - Text Font 클릭하고 Edit 클릭 > 원하는 글꼴과 크기 설정하고 확인 > Apply

	2. 인코딩 타입 변경 (UTF-8 - Default)
		enc 검색 > Workspace 클릭 > Text file encoding > Other - UTF-8 설정된 것 확인

	3. 컴파일러 변경
		compiler 검색 > level 21에서 17로 변경(JDK 버전에 맞게 변경) > Apply
		
	4. 관점 변경
		perspective 검색 > 기본적으로 java EE로 되어있음 > JAVA로 변경 > Apply and Close > 안바뀌어 있다면 오른쪽 위에 있는 창문모양 아이콘을 눌러서 변경해준다.

4. 자바의 구성요소
	자바 프로젝트 > 패키지 > 클래스 > 메소드
	
	* 클래스는 앞글자가 대문자!!!
	* 메소드는 이름 뒤에 소괄호()가 온다. (이름뒤에 ()는 해당 코드가 메소드임을 의미한다.)

	세미콜론(;) : 자바에서 문장의 끝을 표시하는 문자.

	중괄호({}) : 자바에서 영역을 표시하는 문자
	
	들여쓰기 (\t) : 	자바에서는 들여쓰기가 코드에 영향을 주지 않는다.
			가독성을 위해서 사용
	
	콘솔	: 사용자와 운영체제가 소통한 결과를 나타내는 창, 개발자를 위한 창
	
	주석	:
				프로그램 실행에 영향을 끼치지 않는다. 
				개발자간의 소통 -> 소스코드에 대한 설명글을 작성할 때 쓰게 된다.
				지금 당장 사용하지 않는 코드가 있을 때
				* 모든 코드 해석을 할 때 주석을 사용한다.
				// 	한줄 주석
				/**/ 	범위주석
				/** */	API 주석

5. 이클립스 단축키(윈도우 기준)
	ctrl + n : 새로운 파일 생성(프로젝트, 패키지, 클래스)
	ctrl + s : 저장
	ctrl + F11 : 실행
	파일 클릭 후 F2 : 파일 이름 변경
	main + ctrl + space bar : main 메소드 자동생성
	syso + ctrl + space bar : 출력 메소드 자동생성
	ctrl + / : 한줄 주석


cd : changedirectory
dir
javac 파일명.java : 컴파일 작업
응용프로그램은 해당 파일에 있어야한다.
클래스 첫글자는 대문자이어야 한다.
패키지 명이 좌측에 만들어져 있어야하고
클래스명이 파일이름과 같아야한다.
.java : 자바클래스파일 확장자
같은 이름의 프로젝트 패키지 클래스는 생성할 수 없다.
개인 설정등 필요없는 파일은 .gitignore로 무시해준다.
컴파일러는 자동적으로 클래스를 만들경우 bin이라는 폴더에 클래스파일을 만들어줌












